@using QuizExperiment.Models
@using Blazorise.Charts
@using QuizExperiment.Models.Client

@{
    var correctAnswer = Question?.GetCorrectAnswer();
    var details = correctAnswer?.GetAnswerDetails(Question);
    var correctAnswerIndex = details?.index ?? -1;
    var correctAnswerText = details?.description ?? "Unknown answer";
    var correctButtonName = details?.buttonName ?? "Unknown";
}

<div class="d-flex flex-column min-vh-100 justify-content-center align-items-center quiz-page">
    <div class="next-question-fixed-container">
        <button class="btn btn-success my-3 btn-primary-action" @onclick="@(e=> OnNextQuestion.InvokeAsync())">
            NEXT >
        </button>
    </div>
    <div class="my-3 fs-4">The correct answer is</div>
    <button class="btn btn-correct-answer btn-answer-@correctAnswerIndex" value="@correctButtonName"><span>@correctButtonName</span></button>
    <div class="my-3 fs-2 fw-bold">@correctAnswerText</div>
    @* //TODO: Re-add the answer chart back in *@
    @* <QuizExperiment.Admin.Client.Shared.Components.AnswerChart Values="@_answers" /> *@
</div>

@code {
    [Parameter]
    public Dictionary<string, ClientAnswerTiming>? UserAnswers { get; set; }

    [Parameter]
    public EventCallback<string> OnNextQuestion { get; set; }

    [Parameter]
    public Question? Question { get; set; }
    
    // private Dictionary<int, int>? _answers;

    protected override void OnParametersSet()
    {
        // if(UserAnswers is null)
        // {
        //     throw new NullReferenceException("AnswerSummary: UserAnswers collection is null");
        // }
        // _answers = UserAnswers.GroupBy(r => r.Value.AnswerIndex).Select(r => new
        // {
        //     AnswerIndex = r.Key,
        //     Count = r.Count()
        // }).ToDictionary(k => k.AnswerIndex, v => v.Count);


        
        base.OnParametersSet();
    }

}
