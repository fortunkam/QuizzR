@using QuizExperiment.Models

@if(Question is not null)
{
    <!-- Question Item -->
    <div class="quiz-edit-question-item d-flex flex-column align-items-center @(Question.IsValid ? "" : "quiz-edit-question-item-validation-failed")">
        <div class="quiz-edit-question-item-validation-icon">
            !
        </div>
        <div class="quiz-edit-question-item-title fw-bold">@QuestionIndex) @Question.Title</div>

        <img class="img-fluid rounded quiz-edit-question-item-img" src="@Question.ImageUrl" />

        <div class="d-flex quiz-edit-question-item-controls align-items-center">
            <button class="quiz-edit-question-item-edit" title="edit" @onclick="@(e=> OnEditQuestion.InvokeAsync(Question))">
                ✏️
            </button>
            <button class="btn btn-outline-secondary btn-sm ms-2" title="Move Up" @onclick="MoveUp" disabled="@(IsFirst)">
                ▲
            </button>
            <button class="btn btn-outline-secondary btn-sm ms-1" title="Move Down" @onclick="MoveDown" disabled="@(IsLast)">
                ▼
            </button>
            <div class="flex-grow-1"></div>
            <button class="quiz-edit-question-item-delete" title="delete" @onclick="@(e=> OnDeleteQuestion.InvokeAsync(Question))">
                🗑️
            </button>
        </div>
    </div>
}

@code {

    [Parameter]
    public Question? Question { get; set; }

    [Parameter]
    public int QuestionIndex { get; set; }

    [Parameter]
    public EventCallback<Question> OnEditQuestion { get; set; }

    [Parameter]
    public EventCallback<Question> OnDeleteQuestion { get; set; }

    [Parameter]
    public EventCallback<int> OnMoveUp { get; set; }

    [Parameter]
    public EventCallback<int> OnMoveDown { get; set; }

    [Parameter]
    public bool IsFirst { get; set; }

    [Parameter]
    public bool IsLast { get; set; }

    private async Task MoveUp() => await OnMoveUp.InvokeAsync(QuestionIndex - 1);
    private async Task MoveDown() => await OnMoveDown.InvokeAsync(QuestionIndex - 1);

}
