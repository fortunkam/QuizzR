@using QuizExperiment.Models.Client

@{
    if(Question != null)
    {

        <div class="d-flex flex-column min-vh-100 justify-content-center align-items-center quiz-page">
            <h1 class="h1 text-center quiz-client-title px-3">@Question.Title</h1>
            <div class="quiz-button-container">
                @for (var i = 0; i < Question.Options?.Count; i++)
                {
                    var answer = Question.Options[i];
                    var index = i;
                    <button class="btn btn-client-quiz btn-quiz-@i" @onclick="@(e => SubmitAnswer(index))" value="@index"><span>@(index.GetButtonNameFromIndex())</span><span class="multiple-choice-answer-text">@answer</span></button>
                }

            </div>
        </div>
    }
}

@code {

    [Parameter]
    public ClientMultipleChoiceQuestion? Question { get; set; }

    [Parameter]
    public EventCallback<ClientAnswer> OnAnswerSubmit { get; set; }

    private async Task SubmitAnswer(int answerIndex)
    {
        var answer = new ClientMultipleChoiceAnswer
        {
            AnswerIndex = answerIndex
        };
        await OnAnswerSubmit.InvokeAsync(answer);
    }

}
